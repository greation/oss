<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package.Mapper}.${table.mapperName}">

#if(${enableCache})
    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

#end
#if(${baseResultMap})
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="${package.Entity}.${entity}">
#foreach($field in ${table.fields})
#if(${field.keyFlag})##生成主键排在第一位
        <id column="${field.name}" property="${field.propertyName}" />
#end
#end
    <!-- 建议删除delflag,version,roleId等业务无关列 -->
#foreach($field in ${table.commonFields})##生成公共字段
    #if(${field.name} == "delflag")
    #elseif(${field.name} == "version")
    #elseif(${field.name} == "roleId")
    #else
        <result column="${field.name}" property="${field.propertyName}" />
    #end
#end
#foreach($field in ${table.fields})
#if(!${field.keyFlag})##生成普通字段
        <result column="${field.name}" property="${field.propertyName}" />
#end
#end
    </resultMap>

#end
#if(${baseColumnList})
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        <!-- 建议删除delflag,version,roleId等业务无关列 -->
#foreach($field in ${table.commonFields})
    #if(${field.name} == "delflag")
    #elseif(${field.name} == "version")
    #elseif(${field.name} == "roleId")
    #elseif(${field.name} == ${field.propertyName})
        ${field.name},
    #else
        ${field.name} AS ${field.propertyName},
    #end
#end
      ${table.fieldNames}
    </sql>

#end

    <select id="getLists" resultType="map">
        select
          <include refid="Base_Column_List"/>
        from ${table.name} where delflag = 0
        <if test="beginTime != null and beginTime !='' and endTime != null and endTime != ''">
            and (createtime between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
        <if test="value != null and value !=''">
            and value like CONCAT('%',#{value},'%')
        </if>
        <choose>
            <when test="orderByField != null and orderByField !=''">
                <choose>
                    <when test="isAsc == true">
                        order by ${orderByField} ASC
                    </when>
                    <otherwise>
                        order by ${orderByField} DESC
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                order by createtime DESC
            </otherwise>
        </choose>
    </select>
</mapper>
